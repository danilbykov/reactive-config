// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package com.github.fit51.reactiveconfig.etcd.gen.rpc

/** @param action
  *   action is the kind of alarm request to issue. The action
  *   may GET alarm statuses, ACTIVATE an alarm, or DEACTIVATE a
  *   raised alarm.
  * @param memberID
  *   memberID is the ID of the member associated with the alarm. If memberID is 0, the
  *   alarm request covers all members.
  * @param alarm
  *   alarm is the type of alarm to consider for this request.
  */
@SerialVersionUID(0L)
final case class AlarmRequest(
    action: com.github.fit51.reactiveconfig.etcd.gen.rpc.AlarmRequest.AlarmAction = com.github.fit51.reactiveconfig.etcd.gen.rpc.AlarmRequest.AlarmAction.GET,
    memberID: _root_.scala.Long = 0L,
    alarm: com.github.fit51.reactiveconfig.etcd.gen.rpc.AlarmType = com.github.fit51.reactiveconfig.etcd.gen.rpc.AlarmType.NONE,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[AlarmRequest] {
    @transient
    private[this] var __serializedSizeCachedValue: _root_.scala.Int = 0
    private[this] def __computeSerializedValue(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = action.value
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(1, __value)
        }
      };
      
      {
        val __value = memberID
        if (__value != 0L) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeUInt64Size(2, __value)
        }
      };
      
      {
        val __value = alarm.value
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(3, __value)
        }
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var read = __serializedSizeCachedValue
      if (read == 0) {
        read = __computeSerializedValue()
        __serializedSizeCachedValue = read
      }
      read
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = action.value
        if (__v != 0) {
          _output__.writeEnum(1, __v)
        }
      };
      {
        val __v = memberID
        if (__v != 0L) {
          _output__.writeUInt64(2, __v)
        }
      };
      {
        val __v = alarm.value
        if (__v != 0) {
          _output__.writeEnum(3, __v)
        }
      };
      unknownFields.writeTo(_output__)
    }
    def withAction(__v: com.github.fit51.reactiveconfig.etcd.gen.rpc.AlarmRequest.AlarmAction): AlarmRequest = copy(action = __v)
    def withMemberID(__v: _root_.scala.Long): AlarmRequest = copy(memberID = __v)
    def withAlarm(__v: com.github.fit51.reactiveconfig.etcd.gen.rpc.AlarmType): AlarmRequest = copy(alarm = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = action.javaValueDescriptor
          if (__t.getNumber() != 0) __t else null
        }
        case 2 => {
          val __t = memberID
          if (__t != 0L) __t else null
        }
        case 3 => {
          val __t = alarm.javaValueDescriptor
          if (__t.getNumber() != 0) __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PEnum(action.scalaValueDescriptor)
        case 2 => _root_.scalapb.descriptors.PLong(memberID)
        case 3 => _root_.scalapb.descriptors.PEnum(alarm.scalaValueDescriptor)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion = com.github.fit51.reactiveconfig.etcd.gen.rpc.AlarmRequest
    // @@protoc_insertion_point(GeneratedMessage[etcdserverpb.AlarmRequest])
}

object AlarmRequest extends scalapb.GeneratedMessageCompanion[com.github.fit51.reactiveconfig.etcd.gen.rpc.AlarmRequest] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[com.github.fit51.reactiveconfig.etcd.gen.rpc.AlarmRequest] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.github.fit51.reactiveconfig.etcd.gen.rpc.AlarmRequest = {
    var __action: com.github.fit51.reactiveconfig.etcd.gen.rpc.AlarmRequest.AlarmAction = com.github.fit51.reactiveconfig.etcd.gen.rpc.AlarmRequest.AlarmAction.GET
    var __memberID: _root_.scala.Long = 0L
    var __alarm: com.github.fit51.reactiveconfig.etcd.gen.rpc.AlarmType = com.github.fit51.reactiveconfig.etcd.gen.rpc.AlarmType.NONE
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 8 =>
          __action = com.github.fit51.reactiveconfig.etcd.gen.rpc.AlarmRequest.AlarmAction.fromValue(_input__.readEnum())
        case 16 =>
          __memberID = _input__.readUInt64()
        case 24 =>
          __alarm = com.github.fit51.reactiveconfig.etcd.gen.rpc.AlarmType.fromValue(_input__.readEnum())
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    com.github.fit51.reactiveconfig.etcd.gen.rpc.AlarmRequest(
        action = __action,
        memberID = __memberID,
        alarm = __alarm,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[com.github.fit51.reactiveconfig.etcd.gen.rpc.AlarmRequest] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      com.github.fit51.reactiveconfig.etcd.gen.rpc.AlarmRequest(
        action = com.github.fit51.reactiveconfig.etcd.gen.rpc.AlarmRequest.AlarmAction.fromValue(__fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scalapb.descriptors.EnumValueDescriptor]).getOrElse(com.github.fit51.reactiveconfig.etcd.gen.rpc.AlarmRequest.AlarmAction.GET.scalaValueDescriptor).number),
        memberID = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Long]).getOrElse(0L),
        alarm = com.github.fit51.reactiveconfig.etcd.gen.rpc.AlarmType.fromValue(__fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scalapb.descriptors.EnumValueDescriptor]).getOrElse(com.github.fit51.reactiveconfig.etcd.gen.rpc.AlarmType.NONE.scalaValueDescriptor).number)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = RpcProto.javaDescriptor.getMessageTypes().get(41)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = RpcProto.scalaDescriptor.messages(41)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = {
    (__fieldNumber: @_root_.scala.unchecked) match {
      case 1 => com.github.fit51.reactiveconfig.etcd.gen.rpc.AlarmRequest.AlarmAction
      case 3 => com.github.fit51.reactiveconfig.etcd.gen.rpc.AlarmType
    }
  }
  lazy val defaultInstance = com.github.fit51.reactiveconfig.etcd.gen.rpc.AlarmRequest(
    action = com.github.fit51.reactiveconfig.etcd.gen.rpc.AlarmRequest.AlarmAction.GET,
    memberID = 0L,
    alarm = com.github.fit51.reactiveconfig.etcd.gen.rpc.AlarmType.NONE
  )
  sealed abstract class AlarmAction(val value: _root_.scala.Int) extends _root_.scalapb.GeneratedEnum {
    type EnumType = AlarmAction
    def isGet: _root_.scala.Boolean = false
    def isActivate: _root_.scala.Boolean = false
    def isDeactivate: _root_.scala.Boolean = false
    def companion: _root_.scalapb.GeneratedEnumCompanion[AlarmAction] = com.github.fit51.reactiveconfig.etcd.gen.rpc.AlarmRequest.AlarmAction
    final def asRecognized: _root_.scala.Option[com.github.fit51.reactiveconfig.etcd.gen.rpc.AlarmRequest.AlarmAction.Recognized] = if (isUnrecognized) _root_.scala.None else _root_.scala.Some(this.asInstanceOf[com.github.fit51.reactiveconfig.etcd.gen.rpc.AlarmRequest.AlarmAction.Recognized])
  }
  
  object AlarmAction extends _root_.scalapb.GeneratedEnumCompanion[AlarmAction] {
    sealed trait Recognized extends AlarmAction
    implicit def enumCompanion: _root_.scalapb.GeneratedEnumCompanion[AlarmAction] = this
    @SerialVersionUID(0L)
    case object GET extends AlarmAction(0) with AlarmAction.Recognized {
      val index = 0
      val name = "GET"
      override def isGet: _root_.scala.Boolean = true
    }
    
    @SerialVersionUID(0L)
    case object ACTIVATE extends AlarmAction(1) with AlarmAction.Recognized {
      val index = 1
      val name = "ACTIVATE"
      override def isActivate: _root_.scala.Boolean = true
    }
    
    @SerialVersionUID(0L)
    case object DEACTIVATE extends AlarmAction(2) with AlarmAction.Recognized {
      val index = 2
      val name = "DEACTIVATE"
      override def isDeactivate: _root_.scala.Boolean = true
    }
    
    @SerialVersionUID(0L)
    final case class Unrecognized(unrecognizedValue: _root_.scala.Int) extends AlarmAction(unrecognizedValue) with _root_.scalapb.UnrecognizedEnum
    
    lazy val values = scala.collection.immutable.Seq(GET, ACTIVATE, DEACTIVATE)
    def fromValue(__value: _root_.scala.Int): AlarmAction = __value match {
      case 0 => GET
      case 1 => ACTIVATE
      case 2 => DEACTIVATE
      case __other => Unrecognized(__other)
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.EnumDescriptor = com.github.fit51.reactiveconfig.etcd.gen.rpc.AlarmRequest.javaDescriptor.getEnumTypes().get(0)
    def scalaDescriptor: _root_.scalapb.descriptors.EnumDescriptor = com.github.fit51.reactiveconfig.etcd.gen.rpc.AlarmRequest.scalaDescriptor.enums(0)
  }
  implicit class AlarmRequestLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, com.github.fit51.reactiveconfig.etcd.gen.rpc.AlarmRequest]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, com.github.fit51.reactiveconfig.etcd.gen.rpc.AlarmRequest](_l) {
    def action: _root_.scalapb.lenses.Lens[UpperPB, com.github.fit51.reactiveconfig.etcd.gen.rpc.AlarmRequest.AlarmAction] = field(_.action)((c_, f_) => c_.copy(action = f_))
    def memberID: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.memberID)((c_, f_) => c_.copy(memberID = f_))
    def alarm: _root_.scalapb.lenses.Lens[UpperPB, com.github.fit51.reactiveconfig.etcd.gen.rpc.AlarmType] = field(_.alarm)((c_, f_) => c_.copy(alarm = f_))
  }
  final val ACTION_FIELD_NUMBER = 1
  final val MEMBERID_FIELD_NUMBER = 2
  final val ALARM_FIELD_NUMBER = 3
  def of(
    action: com.github.fit51.reactiveconfig.etcd.gen.rpc.AlarmRequest.AlarmAction,
    memberID: _root_.scala.Long,
    alarm: com.github.fit51.reactiveconfig.etcd.gen.rpc.AlarmType
  ): _root_.com.github.fit51.reactiveconfig.etcd.gen.rpc.AlarmRequest = _root_.com.github.fit51.reactiveconfig.etcd.gen.rpc.AlarmRequest(
    action,
    memberID,
    alarm
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[etcdserverpb.AlarmRequest])
}
