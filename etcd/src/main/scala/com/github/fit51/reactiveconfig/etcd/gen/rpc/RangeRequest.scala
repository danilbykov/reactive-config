// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package com.github.fit51.reactiveconfig.etcd.gen.rpc

/** @param key
  *   key is the first key for the range. If range_end is not given, the request only looks up key.
  * @param rangeEnd
  *   range_end is the upper bound on the requested range [key, range_end).
  *   If range_end is '&92;0', the range is all keys &gt;= key.
  *   If range_end is key plus one (e.g., "aa"+1 == "ab", "a&92;xff"+1 == "b"),
  *   then the range request gets all keys prefixed with key.
  *   If both key and range_end are '&92;0', then the range request returns all keys.
  * @param limit
  *   limit is a limit on the number of keys returned for the request. When limit is set to 0,
  *   it is treated as no limit.
  * @param revision
  *   revision is the point-in-time of the key-value store to use for the range.
  *   If revision is less or equal to zero, the range is over the newest key-value store.
  *   If the revision has been compacted, ErrCompacted is returned as a response.
  * @param sortOrder
  *   sort_order is the order for returned sorted results.
  * @param sortTarget
  *   sort_target is the key-value field to use for sorting.
  * @param serializable
  *   serializable sets the range request to use serializable member-local reads.
  *   Range requests are linearizable by default; linearizable requests have higher
  *   latency and lower throughput than serializable requests but reflect the current
  *   consensus of the cluster. For better performance, in exchange for possible stale reads,
  *   a serializable range request is served locally without needing to reach consensus
  *   with other nodes in the cluster.
  * @param keysOnly
  *   keys_only when set returns only the keys and not the values.
  * @param countOnly
  *   count_only when set returns only the count of the keys in the range.
  * @param minModRevision
  *   min_mod_revision is the lower bound for returned key mod revisions; all keys with
  *   lesser mod revisions will be filtered away.
  * @param maxModRevision
  *   max_mod_revision is the upper bound for returned key mod revisions; all keys with
  *   greater mod revisions will be filtered away.
  * @param minCreateRevision
  *   min_create_revision is the lower bound for returned key create revisions; all keys with
  *   lesser create trevisions will be filtered away.
  * @param maxCreateRevision
  *   max_create_revision is the upper bound for returned key create revisions; all keys with
  *   greater create revisions will be filtered away.
  */
@SerialVersionUID(0L)
final case class RangeRequest(
    key: _root_.com.google.protobuf.ByteString = _root_.com.google.protobuf.ByteString.EMPTY,
    rangeEnd: _root_.com.google.protobuf.ByteString = _root_.com.google.protobuf.ByteString.EMPTY,
    limit: _root_.scala.Long = 0L,
    revision: _root_.scala.Long = 0L,
    sortOrder: com.github.fit51.reactiveconfig.etcd.gen.rpc.RangeRequest.SortOrder = com.github.fit51.reactiveconfig.etcd.gen.rpc.RangeRequest.SortOrder.NONE,
    sortTarget: com.github.fit51.reactiveconfig.etcd.gen.rpc.RangeRequest.SortTarget = com.github.fit51.reactiveconfig.etcd.gen.rpc.RangeRequest.SortTarget.KEY,
    serializable: _root_.scala.Boolean = false,
    keysOnly: _root_.scala.Boolean = false,
    countOnly: _root_.scala.Boolean = false,
    minModRevision: _root_.scala.Long = 0L,
    maxModRevision: _root_.scala.Long = 0L,
    minCreateRevision: _root_.scala.Long = 0L,
    maxCreateRevision: _root_.scala.Long = 0L,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[RangeRequest] {
    @transient
    private[this] var __serializedSizeCachedValue: _root_.scala.Int = 0
    private[this] def __computeSerializedValue(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = key
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBytesSize(1, __value)
        }
      };
      
      {
        val __value = rangeEnd
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBytesSize(2, __value)
        }
      };
      
      {
        val __value = limit
        if (__value != 0L) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt64Size(3, __value)
        }
      };
      
      {
        val __value = revision
        if (__value != 0L) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt64Size(4, __value)
        }
      };
      
      {
        val __value = sortOrder.value
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(5, __value)
        }
      };
      
      {
        val __value = sortTarget.value
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(6, __value)
        }
      };
      
      {
        val __value = serializable
        if (__value != false) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(7, __value)
        }
      };
      
      {
        val __value = keysOnly
        if (__value != false) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(8, __value)
        }
      };
      
      {
        val __value = countOnly
        if (__value != false) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(9, __value)
        }
      };
      
      {
        val __value = minModRevision
        if (__value != 0L) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt64Size(10, __value)
        }
      };
      
      {
        val __value = maxModRevision
        if (__value != 0L) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt64Size(11, __value)
        }
      };
      
      {
        val __value = minCreateRevision
        if (__value != 0L) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt64Size(12, __value)
        }
      };
      
      {
        val __value = maxCreateRevision
        if (__value != 0L) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt64Size(13, __value)
        }
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var read = __serializedSizeCachedValue
      if (read == 0) {
        read = __computeSerializedValue()
        __serializedSizeCachedValue = read
      }
      read
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = key
        if (!__v.isEmpty) {
          _output__.writeBytes(1, __v)
        }
      };
      {
        val __v = rangeEnd
        if (!__v.isEmpty) {
          _output__.writeBytes(2, __v)
        }
      };
      {
        val __v = limit
        if (__v != 0L) {
          _output__.writeInt64(3, __v)
        }
      };
      {
        val __v = revision
        if (__v != 0L) {
          _output__.writeInt64(4, __v)
        }
      };
      {
        val __v = sortOrder.value
        if (__v != 0) {
          _output__.writeEnum(5, __v)
        }
      };
      {
        val __v = sortTarget.value
        if (__v != 0) {
          _output__.writeEnum(6, __v)
        }
      };
      {
        val __v = serializable
        if (__v != false) {
          _output__.writeBool(7, __v)
        }
      };
      {
        val __v = keysOnly
        if (__v != false) {
          _output__.writeBool(8, __v)
        }
      };
      {
        val __v = countOnly
        if (__v != false) {
          _output__.writeBool(9, __v)
        }
      };
      {
        val __v = minModRevision
        if (__v != 0L) {
          _output__.writeInt64(10, __v)
        }
      };
      {
        val __v = maxModRevision
        if (__v != 0L) {
          _output__.writeInt64(11, __v)
        }
      };
      {
        val __v = minCreateRevision
        if (__v != 0L) {
          _output__.writeInt64(12, __v)
        }
      };
      {
        val __v = maxCreateRevision
        if (__v != 0L) {
          _output__.writeInt64(13, __v)
        }
      };
      unknownFields.writeTo(_output__)
    }
    def withKey(__v: _root_.com.google.protobuf.ByteString): RangeRequest = copy(key = __v)
    def withRangeEnd(__v: _root_.com.google.protobuf.ByteString): RangeRequest = copy(rangeEnd = __v)
    def withLimit(__v: _root_.scala.Long): RangeRequest = copy(limit = __v)
    def withRevision(__v: _root_.scala.Long): RangeRequest = copy(revision = __v)
    def withSortOrder(__v: com.github.fit51.reactiveconfig.etcd.gen.rpc.RangeRequest.SortOrder): RangeRequest = copy(sortOrder = __v)
    def withSortTarget(__v: com.github.fit51.reactiveconfig.etcd.gen.rpc.RangeRequest.SortTarget): RangeRequest = copy(sortTarget = __v)
    def withSerializable(__v: _root_.scala.Boolean): RangeRequest = copy(serializable = __v)
    def withKeysOnly(__v: _root_.scala.Boolean): RangeRequest = copy(keysOnly = __v)
    def withCountOnly(__v: _root_.scala.Boolean): RangeRequest = copy(countOnly = __v)
    def withMinModRevision(__v: _root_.scala.Long): RangeRequest = copy(minModRevision = __v)
    def withMaxModRevision(__v: _root_.scala.Long): RangeRequest = copy(maxModRevision = __v)
    def withMinCreateRevision(__v: _root_.scala.Long): RangeRequest = copy(minCreateRevision = __v)
    def withMaxCreateRevision(__v: _root_.scala.Long): RangeRequest = copy(maxCreateRevision = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = key
          if (__t != _root_.com.google.protobuf.ByteString.EMPTY) __t else null
        }
        case 2 => {
          val __t = rangeEnd
          if (__t != _root_.com.google.protobuf.ByteString.EMPTY) __t else null
        }
        case 3 => {
          val __t = limit
          if (__t != 0L) __t else null
        }
        case 4 => {
          val __t = revision
          if (__t != 0L) __t else null
        }
        case 5 => {
          val __t = sortOrder.javaValueDescriptor
          if (__t.getNumber() != 0) __t else null
        }
        case 6 => {
          val __t = sortTarget.javaValueDescriptor
          if (__t.getNumber() != 0) __t else null
        }
        case 7 => {
          val __t = serializable
          if (__t != false) __t else null
        }
        case 8 => {
          val __t = keysOnly
          if (__t != false) __t else null
        }
        case 9 => {
          val __t = countOnly
          if (__t != false) __t else null
        }
        case 10 => {
          val __t = minModRevision
          if (__t != 0L) __t else null
        }
        case 11 => {
          val __t = maxModRevision
          if (__t != 0L) __t else null
        }
        case 12 => {
          val __t = minCreateRevision
          if (__t != 0L) __t else null
        }
        case 13 => {
          val __t = maxCreateRevision
          if (__t != 0L) __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PByteString(key)
        case 2 => _root_.scalapb.descriptors.PByteString(rangeEnd)
        case 3 => _root_.scalapb.descriptors.PLong(limit)
        case 4 => _root_.scalapb.descriptors.PLong(revision)
        case 5 => _root_.scalapb.descriptors.PEnum(sortOrder.scalaValueDescriptor)
        case 6 => _root_.scalapb.descriptors.PEnum(sortTarget.scalaValueDescriptor)
        case 7 => _root_.scalapb.descriptors.PBoolean(serializable)
        case 8 => _root_.scalapb.descriptors.PBoolean(keysOnly)
        case 9 => _root_.scalapb.descriptors.PBoolean(countOnly)
        case 10 => _root_.scalapb.descriptors.PLong(minModRevision)
        case 11 => _root_.scalapb.descriptors.PLong(maxModRevision)
        case 12 => _root_.scalapb.descriptors.PLong(minCreateRevision)
        case 13 => _root_.scalapb.descriptors.PLong(maxCreateRevision)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion = com.github.fit51.reactiveconfig.etcd.gen.rpc.RangeRequest
    // @@protoc_insertion_point(GeneratedMessage[etcdserverpb.RangeRequest])
}

object RangeRequest extends scalapb.GeneratedMessageCompanion[com.github.fit51.reactiveconfig.etcd.gen.rpc.RangeRequest] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[com.github.fit51.reactiveconfig.etcd.gen.rpc.RangeRequest] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.github.fit51.reactiveconfig.etcd.gen.rpc.RangeRequest = {
    var __key: _root_.com.google.protobuf.ByteString = _root_.com.google.protobuf.ByteString.EMPTY
    var __rangeEnd: _root_.com.google.protobuf.ByteString = _root_.com.google.protobuf.ByteString.EMPTY
    var __limit: _root_.scala.Long = 0L
    var __revision: _root_.scala.Long = 0L
    var __sortOrder: com.github.fit51.reactiveconfig.etcd.gen.rpc.RangeRequest.SortOrder = com.github.fit51.reactiveconfig.etcd.gen.rpc.RangeRequest.SortOrder.NONE
    var __sortTarget: com.github.fit51.reactiveconfig.etcd.gen.rpc.RangeRequest.SortTarget = com.github.fit51.reactiveconfig.etcd.gen.rpc.RangeRequest.SortTarget.KEY
    var __serializable: _root_.scala.Boolean = false
    var __keysOnly: _root_.scala.Boolean = false
    var __countOnly: _root_.scala.Boolean = false
    var __minModRevision: _root_.scala.Long = 0L
    var __maxModRevision: _root_.scala.Long = 0L
    var __minCreateRevision: _root_.scala.Long = 0L
    var __maxCreateRevision: _root_.scala.Long = 0L
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __key = _input__.readBytes()
        case 18 =>
          __rangeEnd = _input__.readBytes()
        case 24 =>
          __limit = _input__.readInt64()
        case 32 =>
          __revision = _input__.readInt64()
        case 40 =>
          __sortOrder = com.github.fit51.reactiveconfig.etcd.gen.rpc.RangeRequest.SortOrder.fromValue(_input__.readEnum())
        case 48 =>
          __sortTarget = com.github.fit51.reactiveconfig.etcd.gen.rpc.RangeRequest.SortTarget.fromValue(_input__.readEnum())
        case 56 =>
          __serializable = _input__.readBool()
        case 64 =>
          __keysOnly = _input__.readBool()
        case 72 =>
          __countOnly = _input__.readBool()
        case 80 =>
          __minModRevision = _input__.readInt64()
        case 88 =>
          __maxModRevision = _input__.readInt64()
        case 96 =>
          __minCreateRevision = _input__.readInt64()
        case 104 =>
          __maxCreateRevision = _input__.readInt64()
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    com.github.fit51.reactiveconfig.etcd.gen.rpc.RangeRequest(
        key = __key,
        rangeEnd = __rangeEnd,
        limit = __limit,
        revision = __revision,
        sortOrder = __sortOrder,
        sortTarget = __sortTarget,
        serializable = __serializable,
        keysOnly = __keysOnly,
        countOnly = __countOnly,
        minModRevision = __minModRevision,
        maxModRevision = __maxModRevision,
        minCreateRevision = __minCreateRevision,
        maxCreateRevision = __maxCreateRevision,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[com.github.fit51.reactiveconfig.etcd.gen.rpc.RangeRequest] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      com.github.fit51.reactiveconfig.etcd.gen.rpc.RangeRequest(
        key = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.com.google.protobuf.ByteString]).getOrElse(_root_.com.google.protobuf.ByteString.EMPTY),
        rangeEnd = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.com.google.protobuf.ByteString]).getOrElse(_root_.com.google.protobuf.ByteString.EMPTY),
        limit = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.Long]).getOrElse(0L),
        revision = __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).map(_.as[_root_.scala.Long]).getOrElse(0L),
        sortOrder = com.github.fit51.reactiveconfig.etcd.gen.rpc.RangeRequest.SortOrder.fromValue(__fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).map(_.as[_root_.scalapb.descriptors.EnumValueDescriptor]).getOrElse(com.github.fit51.reactiveconfig.etcd.gen.rpc.RangeRequest.SortOrder.NONE.scalaValueDescriptor).number),
        sortTarget = com.github.fit51.reactiveconfig.etcd.gen.rpc.RangeRequest.SortTarget.fromValue(__fieldsMap.get(scalaDescriptor.findFieldByNumber(6).get).map(_.as[_root_.scalapb.descriptors.EnumValueDescriptor]).getOrElse(com.github.fit51.reactiveconfig.etcd.gen.rpc.RangeRequest.SortTarget.KEY.scalaValueDescriptor).number),
        serializable = __fieldsMap.get(scalaDescriptor.findFieldByNumber(7).get).map(_.as[_root_.scala.Boolean]).getOrElse(false),
        keysOnly = __fieldsMap.get(scalaDescriptor.findFieldByNumber(8).get).map(_.as[_root_.scala.Boolean]).getOrElse(false),
        countOnly = __fieldsMap.get(scalaDescriptor.findFieldByNumber(9).get).map(_.as[_root_.scala.Boolean]).getOrElse(false),
        minModRevision = __fieldsMap.get(scalaDescriptor.findFieldByNumber(10).get).map(_.as[_root_.scala.Long]).getOrElse(0L),
        maxModRevision = __fieldsMap.get(scalaDescriptor.findFieldByNumber(11).get).map(_.as[_root_.scala.Long]).getOrElse(0L),
        minCreateRevision = __fieldsMap.get(scalaDescriptor.findFieldByNumber(12).get).map(_.as[_root_.scala.Long]).getOrElse(0L),
        maxCreateRevision = __fieldsMap.get(scalaDescriptor.findFieldByNumber(13).get).map(_.as[_root_.scala.Long]).getOrElse(0L)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = RpcProto.javaDescriptor.getMessageTypes().get(1)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = RpcProto.scalaDescriptor.messages(1)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = {
    (__fieldNumber: @_root_.scala.unchecked) match {
      case 5 => com.github.fit51.reactiveconfig.etcd.gen.rpc.RangeRequest.SortOrder
      case 6 => com.github.fit51.reactiveconfig.etcd.gen.rpc.RangeRequest.SortTarget
    }
  }
  lazy val defaultInstance = com.github.fit51.reactiveconfig.etcd.gen.rpc.RangeRequest(
    key = _root_.com.google.protobuf.ByteString.EMPTY,
    rangeEnd = _root_.com.google.protobuf.ByteString.EMPTY,
    limit = 0L,
    revision = 0L,
    sortOrder = com.github.fit51.reactiveconfig.etcd.gen.rpc.RangeRequest.SortOrder.NONE,
    sortTarget = com.github.fit51.reactiveconfig.etcd.gen.rpc.RangeRequest.SortTarget.KEY,
    serializable = false,
    keysOnly = false,
    countOnly = false,
    minModRevision = 0L,
    maxModRevision = 0L,
    minCreateRevision = 0L,
    maxCreateRevision = 0L
  )
  sealed abstract class SortOrder(val value: _root_.scala.Int) extends _root_.scalapb.GeneratedEnum {
    type EnumType = SortOrder
    def isNone: _root_.scala.Boolean = false
    def isAscend: _root_.scala.Boolean = false
    def isDescend: _root_.scala.Boolean = false
    def companion: _root_.scalapb.GeneratedEnumCompanion[SortOrder] = com.github.fit51.reactiveconfig.etcd.gen.rpc.RangeRequest.SortOrder
    final def asRecognized: _root_.scala.Option[com.github.fit51.reactiveconfig.etcd.gen.rpc.RangeRequest.SortOrder.Recognized] = if (isUnrecognized) _root_.scala.None else _root_.scala.Some(this.asInstanceOf[com.github.fit51.reactiveconfig.etcd.gen.rpc.RangeRequest.SortOrder.Recognized])
  }
  
  object SortOrder extends _root_.scalapb.GeneratedEnumCompanion[SortOrder] {
    sealed trait Recognized extends SortOrder
    implicit def enumCompanion: _root_.scalapb.GeneratedEnumCompanion[SortOrder] = this
    /** default, no sorting
      */
    @SerialVersionUID(0L)
    case object NONE extends SortOrder(0) with SortOrder.Recognized {
      val index = 0
      val name = "NONE"
      override def isNone: _root_.scala.Boolean = true
    }
    
    /** lowest target value first
      */
    @SerialVersionUID(0L)
    case object ASCEND extends SortOrder(1) with SortOrder.Recognized {
      val index = 1
      val name = "ASCEND"
      override def isAscend: _root_.scala.Boolean = true
    }
    
    /** highest target value first
      */
    @SerialVersionUID(0L)
    case object DESCEND extends SortOrder(2) with SortOrder.Recognized {
      val index = 2
      val name = "DESCEND"
      override def isDescend: _root_.scala.Boolean = true
    }
    
    @SerialVersionUID(0L)
    final case class Unrecognized(unrecognizedValue: _root_.scala.Int) extends SortOrder(unrecognizedValue) with _root_.scalapb.UnrecognizedEnum
    
    lazy val values = scala.collection.immutable.Seq(NONE, ASCEND, DESCEND)
    def fromValue(__value: _root_.scala.Int): SortOrder = __value match {
      case 0 => NONE
      case 1 => ASCEND
      case 2 => DESCEND
      case __other => Unrecognized(__other)
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.EnumDescriptor = com.github.fit51.reactiveconfig.etcd.gen.rpc.RangeRequest.javaDescriptor.getEnumTypes().get(0)
    def scalaDescriptor: _root_.scalapb.descriptors.EnumDescriptor = com.github.fit51.reactiveconfig.etcd.gen.rpc.RangeRequest.scalaDescriptor.enums(0)
  }
  sealed abstract class SortTarget(val value: _root_.scala.Int) extends _root_.scalapb.GeneratedEnum {
    type EnumType = SortTarget
    def isKey: _root_.scala.Boolean = false
    def isVersion: _root_.scala.Boolean = false
    def isCreate: _root_.scala.Boolean = false
    def isMod: _root_.scala.Boolean = false
    def isValue: _root_.scala.Boolean = false
    def companion: _root_.scalapb.GeneratedEnumCompanion[SortTarget] = com.github.fit51.reactiveconfig.etcd.gen.rpc.RangeRequest.SortTarget
    final def asRecognized: _root_.scala.Option[com.github.fit51.reactiveconfig.etcd.gen.rpc.RangeRequest.SortTarget.Recognized] = if (isUnrecognized) _root_.scala.None else _root_.scala.Some(this.asInstanceOf[com.github.fit51.reactiveconfig.etcd.gen.rpc.RangeRequest.SortTarget.Recognized])
  }
  
  object SortTarget extends _root_.scalapb.GeneratedEnumCompanion[SortTarget] {
    sealed trait Recognized extends SortTarget
    implicit def enumCompanion: _root_.scalapb.GeneratedEnumCompanion[SortTarget] = this
    @SerialVersionUID(0L)
    case object KEY extends SortTarget(0) with SortTarget.Recognized {
      val index = 0
      val name = "KEY"
      override def isKey: _root_.scala.Boolean = true
    }
    
    @SerialVersionUID(0L)
    case object VERSION extends SortTarget(1) with SortTarget.Recognized {
      val index = 1
      val name = "VERSION"
      override def isVersion: _root_.scala.Boolean = true
    }
    
    @SerialVersionUID(0L)
    case object CREATE extends SortTarget(2) with SortTarget.Recognized {
      val index = 2
      val name = "CREATE"
      override def isCreate: _root_.scala.Boolean = true
    }
    
    @SerialVersionUID(0L)
    case object MOD extends SortTarget(3) with SortTarget.Recognized {
      val index = 3
      val name = "MOD"
      override def isMod: _root_.scala.Boolean = true
    }
    
    @SerialVersionUID(0L)
    case object VALUE extends SortTarget(4) with SortTarget.Recognized {
      val index = 4
      val name = "VALUE"
      override def isValue: _root_.scala.Boolean = true
    }
    
    @SerialVersionUID(0L)
    final case class Unrecognized(unrecognizedValue: _root_.scala.Int) extends SortTarget(unrecognizedValue) with _root_.scalapb.UnrecognizedEnum
    
    lazy val values = scala.collection.immutable.Seq(KEY, VERSION, CREATE, MOD, VALUE)
    def fromValue(__value: _root_.scala.Int): SortTarget = __value match {
      case 0 => KEY
      case 1 => VERSION
      case 2 => CREATE
      case 3 => MOD
      case 4 => VALUE
      case __other => Unrecognized(__other)
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.EnumDescriptor = com.github.fit51.reactiveconfig.etcd.gen.rpc.RangeRequest.javaDescriptor.getEnumTypes().get(1)
    def scalaDescriptor: _root_.scalapb.descriptors.EnumDescriptor = com.github.fit51.reactiveconfig.etcd.gen.rpc.RangeRequest.scalaDescriptor.enums(1)
  }
  implicit class RangeRequestLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, com.github.fit51.reactiveconfig.etcd.gen.rpc.RangeRequest]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, com.github.fit51.reactiveconfig.etcd.gen.rpc.RangeRequest](_l) {
    def key: _root_.scalapb.lenses.Lens[UpperPB, _root_.com.google.protobuf.ByteString] = field(_.key)((c_, f_) => c_.copy(key = f_))
    def rangeEnd: _root_.scalapb.lenses.Lens[UpperPB, _root_.com.google.protobuf.ByteString] = field(_.rangeEnd)((c_, f_) => c_.copy(rangeEnd = f_))
    def limit: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.limit)((c_, f_) => c_.copy(limit = f_))
    def revision: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.revision)((c_, f_) => c_.copy(revision = f_))
    def sortOrder: _root_.scalapb.lenses.Lens[UpperPB, com.github.fit51.reactiveconfig.etcd.gen.rpc.RangeRequest.SortOrder] = field(_.sortOrder)((c_, f_) => c_.copy(sortOrder = f_))
    def sortTarget: _root_.scalapb.lenses.Lens[UpperPB, com.github.fit51.reactiveconfig.etcd.gen.rpc.RangeRequest.SortTarget] = field(_.sortTarget)((c_, f_) => c_.copy(sortTarget = f_))
    def serializable: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.serializable)((c_, f_) => c_.copy(serializable = f_))
    def keysOnly: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.keysOnly)((c_, f_) => c_.copy(keysOnly = f_))
    def countOnly: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.countOnly)((c_, f_) => c_.copy(countOnly = f_))
    def minModRevision: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.minModRevision)((c_, f_) => c_.copy(minModRevision = f_))
    def maxModRevision: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.maxModRevision)((c_, f_) => c_.copy(maxModRevision = f_))
    def minCreateRevision: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.minCreateRevision)((c_, f_) => c_.copy(minCreateRevision = f_))
    def maxCreateRevision: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.maxCreateRevision)((c_, f_) => c_.copy(maxCreateRevision = f_))
  }
  final val KEY_FIELD_NUMBER = 1
  final val RANGE_END_FIELD_NUMBER = 2
  final val LIMIT_FIELD_NUMBER = 3
  final val REVISION_FIELD_NUMBER = 4
  final val SORT_ORDER_FIELD_NUMBER = 5
  final val SORT_TARGET_FIELD_NUMBER = 6
  final val SERIALIZABLE_FIELD_NUMBER = 7
  final val KEYS_ONLY_FIELD_NUMBER = 8
  final val COUNT_ONLY_FIELD_NUMBER = 9
  final val MIN_MOD_REVISION_FIELD_NUMBER = 10
  final val MAX_MOD_REVISION_FIELD_NUMBER = 11
  final val MIN_CREATE_REVISION_FIELD_NUMBER = 12
  final val MAX_CREATE_REVISION_FIELD_NUMBER = 13
  def of(
    key: _root_.com.google.protobuf.ByteString,
    rangeEnd: _root_.com.google.protobuf.ByteString,
    limit: _root_.scala.Long,
    revision: _root_.scala.Long,
    sortOrder: com.github.fit51.reactiveconfig.etcd.gen.rpc.RangeRequest.SortOrder,
    sortTarget: com.github.fit51.reactiveconfig.etcd.gen.rpc.RangeRequest.SortTarget,
    serializable: _root_.scala.Boolean,
    keysOnly: _root_.scala.Boolean,
    countOnly: _root_.scala.Boolean,
    minModRevision: _root_.scala.Long,
    maxModRevision: _root_.scala.Long,
    minCreateRevision: _root_.scala.Long,
    maxCreateRevision: _root_.scala.Long
  ): _root_.com.github.fit51.reactiveconfig.etcd.gen.rpc.RangeRequest = _root_.com.github.fit51.reactiveconfig.etcd.gen.rpc.RangeRequest(
    key,
    rangeEnd,
    limit,
    revision,
    sortOrder,
    sortTarget,
    serializable,
    keysOnly,
    countOnly,
    minModRevision,
    maxModRevision,
    minCreateRevision,
    maxCreateRevision
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[etcdserverpb.RangeRequest])
}
