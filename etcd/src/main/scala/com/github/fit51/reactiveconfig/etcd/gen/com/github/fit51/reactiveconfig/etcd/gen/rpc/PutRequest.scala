// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package com.github.fit51.reactiveconfig.etcd.gen.rpc

/** @param key
  *   key is the key, in bytes, to put into the key-value store.
  * @param value
  *   value is the value, in bytes, to associate with the key in the key-value store.
  * @param lease
  *   lease is the lease ID to associate with the key in the key-value store. A lease
  *   value of 0 indicates no lease.
  * @param prevKv
  *   If prev_kv is set, etcd gets the previous key-value pair before changing it.
  *   The previous key-value pair will be returned in the put response.
  * @param ignoreValue
  *   If ignore_value is set, etcd updates the key using its current value.
  *   Returns an error if the key does not exist.
  * @param ignoreLease
  *   If ignore_lease is set, etcd updates the key using its current lease.
  *   Returns an error if the key does not exist.
  */
@SerialVersionUID(0L)
final case class PutRequest(
    key: _root_.com.google.protobuf.ByteString = _root_.com.google.protobuf.ByteString.EMPTY,
    value: _root_.com.google.protobuf.ByteString = _root_.com.google.protobuf.ByteString.EMPTY,
    lease: _root_.scala.Long = 0L,
    prevKv: _root_.scala.Boolean = false,
    ignoreValue: _root_.scala.Boolean = false,
    ignoreLease: _root_.scala.Boolean = false
    ) extends scalapb.GeneratedMessage with scalapb.Message[PutRequest] with scalapb.lenses.Updatable[PutRequest] {
    @transient
    private[this] var __serializedSizeCachedValue: _root_.scala.Int = 0
    private[this] def __computeSerializedValue(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = key
        if (__value != _root_.com.google.protobuf.ByteString.EMPTY) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBytesSize(1, __value)
        }
      };
      
      {
        val __value = value
        if (__value != _root_.com.google.protobuf.ByteString.EMPTY) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBytesSize(2, __value)
        }
      };
      
      {
        val __value = lease
        if (__value != 0L) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt64Size(3, __value)
        }
      };
      
      {
        val __value = prevKv
        if (__value != false) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(4, __value)
        }
      };
      
      {
        val __value = ignoreValue
        if (__value != false) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(5, __value)
        }
      };
      
      {
        val __value = ignoreLease
        if (__value != false) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(6, __value)
        }
      };
      __size
    }
    final override def serializedSize: _root_.scala.Int = {
      var read = __serializedSizeCachedValue
      if (read == 0) {
        read = __computeSerializedValue()
        __serializedSizeCachedValue = read
      }
      read
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = key
        if (__v != _root_.com.google.protobuf.ByteString.EMPTY) {
          _output__.writeBytes(1, __v)
        }
      };
      {
        val __v = value
        if (__v != _root_.com.google.protobuf.ByteString.EMPTY) {
          _output__.writeBytes(2, __v)
        }
      };
      {
        val __v = lease
        if (__v != 0L) {
          _output__.writeInt64(3, __v)
        }
      };
      {
        val __v = prevKv
        if (__v != false) {
          _output__.writeBool(4, __v)
        }
      };
      {
        val __v = ignoreValue
        if (__v != false) {
          _output__.writeBool(5, __v)
        }
      };
      {
        val __v = ignoreLease
        if (__v != false) {
          _output__.writeBool(6, __v)
        }
      };
    }
    def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.github.fit51.reactiveconfig.etcd.gen.rpc.PutRequest = {
      var __key = this.key
      var __value = this.value
      var __lease = this.lease
      var __prevKv = this.prevKv
      var __ignoreValue = this.ignoreValue
      var __ignoreLease = this.ignoreLease
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 10 =>
            __key = _input__.readBytes()
          case 18 =>
            __value = _input__.readBytes()
          case 24 =>
            __lease = _input__.readInt64()
          case 32 =>
            __prevKv = _input__.readBool()
          case 40 =>
            __ignoreValue = _input__.readBool()
          case 48 =>
            __ignoreLease = _input__.readBool()
          case tag => _input__.skipField(tag)
        }
      }
      com.github.fit51.reactiveconfig.etcd.gen.rpc.PutRequest(
          key = __key,
          value = __value,
          lease = __lease,
          prevKv = __prevKv,
          ignoreValue = __ignoreValue,
          ignoreLease = __ignoreLease
      )
    }
    def withKey(__v: _root_.com.google.protobuf.ByteString): PutRequest = copy(key = __v)
    def withValue(__v: _root_.com.google.protobuf.ByteString): PutRequest = copy(value = __v)
    def withLease(__v: _root_.scala.Long): PutRequest = copy(lease = __v)
    def withPrevKv(__v: _root_.scala.Boolean): PutRequest = copy(prevKv = __v)
    def withIgnoreValue(__v: _root_.scala.Boolean): PutRequest = copy(ignoreValue = __v)
    def withIgnoreLease(__v: _root_.scala.Boolean): PutRequest = copy(ignoreLease = __v)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = key
          if (__t != _root_.com.google.protobuf.ByteString.EMPTY) __t else null
        }
        case 2 => {
          val __t = value
          if (__t != _root_.com.google.protobuf.ByteString.EMPTY) __t else null
        }
        case 3 => {
          val __t = lease
          if (__t != 0L) __t else null
        }
        case 4 => {
          val __t = prevKv
          if (__t != false) __t else null
        }
        case 5 => {
          val __t = ignoreValue
          if (__t != false) __t else null
        }
        case 6 => {
          val __t = ignoreLease
          if (__t != false) __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PByteString(key)
        case 2 => _root_.scalapb.descriptors.PByteString(value)
        case 3 => _root_.scalapb.descriptors.PLong(lease)
        case 4 => _root_.scalapb.descriptors.PBoolean(prevKv)
        case 5 => _root_.scalapb.descriptors.PBoolean(ignoreValue)
        case 6 => _root_.scalapb.descriptors.PBoolean(ignoreLease)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion = com.github.fit51.reactiveconfig.etcd.gen.rpc.PutRequest
}

object PutRequest extends scalapb.GeneratedMessageCompanion[com.github.fit51.reactiveconfig.etcd.gen.rpc.PutRequest] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[com.github.fit51.reactiveconfig.etcd.gen.rpc.PutRequest] = this
  def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, _root_.scala.Any]): com.github.fit51.reactiveconfig.etcd.gen.rpc.PutRequest = {
    _root_.scala.Predef.require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
    val __fields = javaDescriptor.getFields
    com.github.fit51.reactiveconfig.etcd.gen.rpc.PutRequest(
      __fieldsMap.getOrElse(__fields.get(0), _root_.com.google.protobuf.ByteString.EMPTY).asInstanceOf[_root_.com.google.protobuf.ByteString],
      __fieldsMap.getOrElse(__fields.get(1), _root_.com.google.protobuf.ByteString.EMPTY).asInstanceOf[_root_.com.google.protobuf.ByteString],
      __fieldsMap.getOrElse(__fields.get(2), 0L).asInstanceOf[_root_.scala.Long],
      __fieldsMap.getOrElse(__fields.get(3), false).asInstanceOf[_root_.scala.Boolean],
      __fieldsMap.getOrElse(__fields.get(4), false).asInstanceOf[_root_.scala.Boolean],
      __fieldsMap.getOrElse(__fields.get(5), false).asInstanceOf[_root_.scala.Boolean]
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[com.github.fit51.reactiveconfig.etcd.gen.rpc.PutRequest] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
      com.github.fit51.reactiveconfig.etcd.gen.rpc.PutRequest(
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.com.google.protobuf.ByteString]).getOrElse(_root_.com.google.protobuf.ByteString.EMPTY),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.com.google.protobuf.ByteString]).getOrElse(_root_.com.google.protobuf.ByteString.EMPTY),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.Long]).getOrElse(0L),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).map(_.as[_root_.scala.Boolean]).getOrElse(false),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).map(_.as[_root_.scala.Boolean]).getOrElse(false),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(6).get).map(_.as[_root_.scala.Boolean]).getOrElse(false)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = RpcProto.javaDescriptor.getMessageTypes.get(3)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = RpcProto.scalaDescriptor.messages(3)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = com.github.fit51.reactiveconfig.etcd.gen.rpc.PutRequest(
    key = _root_.com.google.protobuf.ByteString.EMPTY,
    value = _root_.com.google.protobuf.ByteString.EMPTY,
    lease = 0L,
    prevKv = false,
    ignoreValue = false,
    ignoreLease = false
  )
  implicit class PutRequestLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, com.github.fit51.reactiveconfig.etcd.gen.rpc.PutRequest]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, com.github.fit51.reactiveconfig.etcd.gen.rpc.PutRequest](_l) {
    def key: _root_.scalapb.lenses.Lens[UpperPB, _root_.com.google.protobuf.ByteString] = field(_.key)((c_, f_) => c_.copy(key = f_))
    def value: _root_.scalapb.lenses.Lens[UpperPB, _root_.com.google.protobuf.ByteString] = field(_.value)((c_, f_) => c_.copy(value = f_))
    def lease: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.lease)((c_, f_) => c_.copy(lease = f_))
    def prevKv: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.prevKv)((c_, f_) => c_.copy(prevKv = f_))
    def ignoreValue: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.ignoreValue)((c_, f_) => c_.copy(ignoreValue = f_))
    def ignoreLease: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.ignoreLease)((c_, f_) => c_.copy(ignoreLease = f_))
  }
  final val KEY_FIELD_NUMBER = 1
  final val VALUE_FIELD_NUMBER = 2
  final val LEASE_FIELD_NUMBER = 3
  final val PREV_KV_FIELD_NUMBER = 4
  final val IGNORE_VALUE_FIELD_NUMBER = 5
  final val IGNORE_LEASE_FIELD_NUMBER = 6
  def of(
    key: _root_.com.google.protobuf.ByteString,
    value: _root_.com.google.protobuf.ByteString,
    lease: _root_.scala.Long,
    prevKv: _root_.scala.Boolean,
    ignoreValue: _root_.scala.Boolean,
    ignoreLease: _root_.scala.Boolean
  ): _root_.com.github.fit51.reactiveconfig.etcd.gen.rpc.PutRequest = _root_.com.github.fit51.reactiveconfig.etcd.gen.rpc.PutRequest(
    key,
    value,
    lease,
    prevKv,
    ignoreValue,
    ignoreLease
  )
}
