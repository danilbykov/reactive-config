akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = DEBUG

  actor {
    provider = "akka.cluster.ClusterActorRefProvider"

    serializers {
      java = "akka.serialization.JavaSerializer"
    }

    debug {
      fsm = on
    }
  }

  control-aware-dispatcher {
    mailbox-type = "akka.dispatch.UnboundedControlAwareMailbox"
  }

  remote {
    maximum-payload-bytes = 30000000
    log-remote-lifecycle-events = off
    netty.tcp {
      maximum-frame-size = 30000000
      hostname = "0.0.0.0"
      port = 2552
    }
  }

  cluster {
    seed-nodes = [
      "akka.tcp://SearchClusterSystem@0.0.0.0:2552"
    ]
    metrics.enabled = off

    min-nr-of-members = 1

    singleton {
      singleton-name = "singleton"
      role = ""
      hand-over-retry-interval = 2s
      min-number-of-hand-over-retries = 10
    }

    singleton-proxy {
      singleton-name = ${akka.cluster.singleton.singleton-name}
      role = ""
      singleton-identification-interval = 1s
      buffer-size = 1000
    }
  }

  http{
    host-connection-pool {
      max-connections = 32
      min-connections = 0
      max-retries = 0
      max-open-requests = 128
      pipelining-limit = 1
      idle-timeout = 30s
    }
    client.parsing {
      max-content-length = 30m
      max-to-strict-bytes = 30m
    }
  }
}

akka.kafka.producer {
  parallelism: 10
  close-timeout: 5s
  use-dispatcher: "akka.kafka.default-dispatcher"
  kafka-clients {
    buffer.memory: 200000000
    retries: 0
    batch.size: 1048576
    linger.ms: 5000
    reconnect.backoff.max.ms: 600000
    reconnect.backoff.ms: 100
    request.timeout.ms: 3000
    max.block.ms: 4000
  }
}